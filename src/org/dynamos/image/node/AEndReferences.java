/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.dynamos.image.node;

import org.dynamos.image.analysis.*;

@SuppressWarnings("nls")
public final class AEndReferences extends PReferences
{
    private TId _id_;
    private TDollar _dollar_;

    public AEndReferences()
    {
        // Constructor
    }

    public AEndReferences(
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") TDollar _dollar_)
    {
        // Constructor
        setId(_id_);

        setDollar(_dollar_);

    }

    @Override
    public Object clone()
    {
        return new AEndReferences(
            cloneNode(this._id_),
            cloneNode(this._dollar_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEndReferences(this);
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public TDollar getDollar()
    {
        return this._dollar_;
    }

    public void setDollar(TDollar node)
    {
        if(this._dollar_ != null)
        {
            this._dollar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dollar_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._id_)
            + toString(this._dollar_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._dollar_ == child)
        {
            this._dollar_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._dollar_ == oldChild)
        {
            setDollar((TDollar) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
