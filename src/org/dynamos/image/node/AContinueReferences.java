/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.dynamos.image.node;

import org.dynamos.image.analysis.*;

@SuppressWarnings("nls")
public final class AContinueReferences extends PReferences
{
    private TId _id_;
    private TFullstop _fullstop_;
    private PReferences _references_;

    public AContinueReferences()
    {
        // Constructor
    }

    public AContinueReferences(
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") TFullstop _fullstop_,
        @SuppressWarnings("hiding") PReferences _references_)
    {
        // Constructor
        setId(_id_);

        setFullstop(_fullstop_);

        setReferences(_references_);

    }

    @Override
    public Object clone()
    {
        return new AContinueReferences(
            cloneNode(this._id_),
            cloneNode(this._fullstop_),
            cloneNode(this._references_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAContinueReferences(this);
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public TFullstop getFullstop()
    {
        return this._fullstop_;
    }

    public void setFullstop(TFullstop node)
    {
        if(this._fullstop_ != null)
        {
            this._fullstop_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fullstop_ = node;
    }

    public PReferences getReferences()
    {
        return this._references_;
    }

    public void setReferences(PReferences node)
    {
        if(this._references_ != null)
        {
            this._references_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._references_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._id_)
            + toString(this._fullstop_)
            + toString(this._references_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._fullstop_ == child)
        {
            this._fullstop_ = null;
            return;
        }

        if(this._references_ == child)
        {
            this._references_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._fullstop_ == oldChild)
        {
            setFullstop((TFullstop) newChild);
            return;
        }

        if(this._references_ == oldChild)
        {
            setReferences((PReferences) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
